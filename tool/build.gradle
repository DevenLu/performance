apply plugin: 'com.android.library'
//apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: "maven"
apply plugin: 'com.novoda.bintray-release'

android {
  def _android = rootProject.ext.android
  compileSdkVersion _android['compileSdkVersion']
  buildToolsVersion _android['buildToolsVersion']

  defaultConfig {
    minSdkVersion _android['minSdkVersion']
    targetSdkVersion _android['targetSdkVersion']
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    consumerProguardFiles 'consumer-rules.pro'
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  api fileTree(dir: 'libs', include: ['*.jar'])

  testImplementation 'junit:junit:4.13.1'
  androidTestImplementation 'androidx.test.ext:junit:1.1.2'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

  def _dependencies = rootProject.ext.dependencies
  //api _dependencies['hooklib']
  // need for android 11
  //api _dependencies['nativehook']

  //api _dependencies['core-ktx']
  //api _dependencies['kotlin-stdlib-jdk']
  //api _dependencies['kotlinx-coroutines-core']
  //api _dependencies['kotlinx-coroutines-android']

  //  api _dependencies['epic']
  //  api project(path: ':lib-epic')
  api _dependencies['epic-xander']

  api _dependencies['free_reflection']

  api _dependencies['core-ktx']
  api _dependencies['kotlin-stdlib-jdk']

}


// git项目的地址
def _siteUrl = 'https://github.com/XanderWang/performance'
// git的路径
def _gitUrl = 'https://github.com/XanderWang/performance.git'
// group
def _group = 'com.xander.performance'
def _artifactId = 'p-tool'
def _version = rootProject.ext.lib_version

uploadArchives {
  repositories.mavenDeployer {
    repository(url: uri("${rootProject.ext.local_repo_path}"))
    pom.groupId = _group
    pom.artifactId = _artifactId
    pom.version = "$_version"
  }
}

publish {
  // 各个字段的含义见 https://github.com/novoda/bintray-release/wiki/Configuration-of-the-publish-closure
  Properties properties = new Properties()
  properties.load(project.rootProject.file('local.properties').newDataInputStream())
  def user = properties.getProperty('BINTRAY_USER', 'xanderwang')
  def key = properties.getProperty('BINTRAY_KEY', 'xxx')
  userOrg = user
  repoName = 'maven'
  groupId = _group
  artifactId = _artifactId
  publishVersion = _version
  dryRun = false
  desc = 'a lib for android , it can check app performance'
  website = _siteUrl
  bintrayUser = user
  bintrayKey = key
}
